plugins {
    id 'com.android.library'
    id 'maven-publish'
}

def getVersionName() {
    'v' + LIB_VERSION
}

def getVersionCode() {
    def result = 0
    def parts = LIB_VERSION.split('.').reverse()
    for (int i = 0; i < parts.size(); i++) {
        result += Integer.parseInt(part) * pow(100, i)
    }

    result
}

def getBody(String tag) {
    def changelog = file("../CHANGELOG.md")

    def lines = changelog.readLines()
    def versionChanges = new StringBuilder()
    def foundVersion = false
    for (line in lines) {
        if (foundVersion && line ==~ /^#+\s*.+$/) {
            break
        } else if (line ==~ /^#+\s*$tag$/) {
            foundVersion = true
        } else if (foundVersion) {
            versionChanges.append(line)
            versionChanges.append(System.getProperty("line.separator"))
        }
    }
    if (!foundVersion) {
        throw new GradleException("No release notes for version $tag")
    }

    return versionChanges.toString().trim()
}

android {
    def code = getVersionCode()
    def name = getVersionName()

    compileSdk 32
    defaultConfig {
        minSdkVersion 19
        targetSdk 32
        versionCode code
        versionName name
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:1.4.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.3"
    implementation "com.google.android.material:material:1.5.0"

    testImplementation "junit:junit:4.13.2"
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.inbalboa'
                artifactId = 'calcdialog'
                version = name
            }
        }
    }
}

task release {
    def tag = getVersionName()
    def body = getBody(tag)
    doLast {
        exec {
            commandLine 'git', 'tag', '-a', tag, '-m', body
        }
        exec {
            commandLine 'git', 'push', '--atomic', 'origin', 'main', tag
        }
    }
}
